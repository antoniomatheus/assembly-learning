"================ CONFIGURATIONS BASED ON FILETYPE ================

" Enabling filetype support provides filetype-specific indenting,
" syntax highlighting, omni-completion and other useful settings.
filetype plugin indent on 
syntax on

" =============== PLUGIN SECTION ===============

packadd minpac

call minpac#init()

call minpac#add('morhetz/gruvbox')
call minpac#add('terryma/vim-multiple-cursors')
call minpac#add('preservim/nerdtree')
call minpac#add('tpope/vim-unimpaired')
call minpac#add('tpope/vim-commentary') " Comment stuff
call minpac#add('vim-airline/vim-airline')
call minpac#add('vim-airline/vim-airline-themes')
call minpac#add(
      \'prettier/vim-prettier',
      \{ 
      \'do': 'yarn install', 
      \'for': ['javascript', 'typescript', 'css', 'less', 'json', 'graphql', 'markdown', 'vue', 'html', 'scss']
      \ }
      \)
call minpac#add('pangloss/vim-javascript')
call minpac#add('tpope/vim-surround')
call minpac#add('mattn/emmet-vim')
call minpac#add('junegunn/fzf')
call minpac#add('airblade/vim-gitgutter')
call minpac#add('radenling/vim-dispatch-neovim')
call minpac#add('tpope/vim-dispatch')
call minpac#add('neoclide/coc.nvim', {'branch': 'release'})

packloadall

command! PackUpdate call minpac#update()
command! PackClean call minpac#clean()

" NERDTree
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | exe 'cd '.argv()[0] | endif

" =============== GENERAL CONFIGURATION  ===============

" `matchit.vim` is built-in
" Hit `%` on `if` to jump to `else`.
runtime macros/matchit.vim

set ignorecase
set autoindent
set backspace=indent,eol,start
set hidden              " Possibility to have more than one unsaved buffers.
set incsearch			" Increment search, hit `\<CR>` to stop.
set wildmenu 			" Great command-line completion, use `<Tab>` to move
				        " around and `<CR>` to validate.
set number			    " Display the line number on the left of each line.
set tabstop=2           " Set tab width
set shiftwidth=2        " Set shift width
set expandtab           " Expand tab to be spaces
set noshowmode          " Disable mode display
set scrolloff=10        " Cursor padding
set updatetime=100              

" =============== VARIABLES ===============

let mapleader = ","
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'

" =============== MAPPINGS  ===============

noremap <C-space> <esc>
map <C-g> :NERDTreeToggle<CR>
nnoremap <silent> <leader>bd :bd<CR> 

" auto brackets closing
inoremap ( ()<left>
inoremap (; ();<left><left>
inoremap ({ ()<space>{<CR>}<ESC>kf(
inoremap [ []<left>
inoremap { {}<left>
inoremap {;<space> {<space>};<left><left>
inoremap {<CR> {<CR>}<ESC>O
inoremap {;<CR> {<CR>};<ESC>O

" fzf mapping
nnoremap <C-p> :<C-u>FZF<CR>

" =============== STYLING  ===============

colorscheme gruvbox
set background=dark

